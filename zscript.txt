version "4.7.0"

class HDTBJBHandler : EventHandler
{
	override void CheckReplacement(ReplaceEvent e)
	{
		if (!e.Replacement)
		{
			return;
		}

		switch (e.Replacement.GetClassName())
		{
			case 'HideousJackbootReplacer':
				if (random[mongrand]() <= 64)
				{
					e.Replacement = "HDJackbuster";
				}
				break;
		}
	}
	}

class HDDeadTBJBHandler : EventHandler
{
	override void CheckReplacement(ReplaceEvent e)
	{
		if (!e.Replacement)
		{
			return;
		}

		switch (e.Replacement.GetClassName())
		{
			case 'DeadZombieShotgunner':
				if (random[mongrand]() <= 64)
				{
					e.Replacement = "DeadJackbuster";
				}
				break;
		}
	}
	}

class HDJackbuster:HDHumanoid{
	default{
		//$Category "Monsters/Hideous Destructor"
		//$Title "Thunder Buster Guy"
		//$Sprite "PLAYA1"

		seesound "tbguy/sight";
		painsound "tbguy/pain";
		deathsound "tbguy/death";
		activesound "tbguy/active";
		tag "Jackbuster";

		speed 10;
		decal "BulletScratch";
		maxtargetrange 4000;
		painchance 200;

		obituary "%o was fried by wrath of one of the Tyrant's jack-booted thugs.";
		hitobituary "%o was assaulted by the Tyrant's jack-booted thugs.";
	}

	override void postbeginplay(){
		super.postbeginplay();
			bhashelmet=true;
			sprite=GetSpriteIndex("PLAYA1");
			A_SetTranslation("HattedJackboot");
			battery=20;
			givearmour(1.,0.06,-0.4);
			reservebattery=5;
	}

	override void deathdrop(){
		hdweapon wp=null;
		if(!bhasdropped){
			bhasdropped=true;
if(wp=hdweapon(spawn("ThunderBuster",pos,ALLOW_REPLACE))){
				wp.weaponstatus[TBF_ALT]=alt;
					wp.weaponstatus[TBS_BATTERY]=battery;
				}	
		else{
			if(!unloaded){
			let mmm=HDMagAmmo.SpawnMag(self,"HDBattery",battery);
			mmm.vel=vel+(frandom(-1,1),frandom(-1,1),1);
			}
		}
	}
	}
	int battery;
	int turnamount;
	int reservebattery;
	int wildbattery;
	double shotspread;
	bool alt;
	bool unloaded;

	override void tick(){
	super.tick();
	if(HDTBJ_LimitedBatteries){
		if(
			HDTBJ_Tics>349
			&&level.time>0
			&&!(level.time%HDTBJ_Tics)
			&&wildbattery<11
		)wildbattery++;
		}
	}
	
	void A_ThunderZap(){
		if(battery<1){
			setstatelabel("uhohtbisfuckingempty");
			return;
		}
		thunderbuster.thunderzap(self,32,alt,battery);
		if(!random(0,(alt?3:15)))battery--;
	}

	states{
	spawn:
		TBJK A 0;
	idle:
	spawn2:
		#### EEEEEE 1{
			A_HDLook();
			vel.xy-=(cos(angle),sin(angle))*frandom(-0.1,0.1);
			A_SetTics(random(1,10));
		}
		#### B 0 A_Jump(132,2,5,5,5,5);
		#### B 8{
			if(!random(0,1)){
				if(!random(0,4)){
					setstatelabel("spawnstretch");
				}else{
					if(bambush)setstatelabel("spawnstill");
					else setstatelabel("spawnwander");
				}
			}else vel.xy-=(cos(angle),sin(angle))*frandom(-0.2,0.2);
		}loop;
	spawnstretch:
		#### G 1{
			vel.xy-=(cos(angle),sin(angle))*frandom(-0.4,0.4);
			A_SetTics(random(30,80));
		}
		#### A 0 A_Vocalize(activesound);
		---- A 0 setstatelabel("spawn2");
	spawnstill:
		#### C 0{
			A_HDLook();
			vel.xy-=(cos(angle),sin(angle))*frandom(-0.4,0.4);
		}
		#### CD 5{angle+=random(-4,4);}
		#### A 0{
			A_HDLook();
			if(!random(0,15))A_Vocalize(activesound);
		}
		#### AB 5{angle+=random(-4,4);}
		#### B 1 A_SetTics(random(10,40));
		---- A 0 setstatelabel("spawn2");
	spawnwander:
		#### CD 5 A_HDWander();
		#### A 0 {
			if(!random(0,15))A_Vocalize(activesound);
			A_HDLook();
		}
		#### AB 5 A_HDWander();
		#### A 0 A_Jump(64,"spawn2");
		loop;

	see:
		#### ABCD 4 A_HDChase();
		#### A 0 A_JumpIfTargetInLOS("see");
		#### A 0 A_Jump(16,"roam");
		loop;
	roam:
		#### A 0 A_Jump(60,"roam2");
	roam1:
		#### E 4{bmissileevenmore=true;}
		#### EEEE 3 A_HDChase("melee","turnaround",CHF_DONTMOVE);
		#### A 0{bmissileevenmore=false;}
		#### A 0 A_Jump(60,"roam");
	roam2:
		#### A 0 A_Jump(8,"see");
		#### ABCD 6 A_HDChase();
		#### A 0 A_Jump(200,"Roam");
		#### A 0 A_JumpIfTargetInLOS("see");
		loop;
	turnaround:
		#### A 0 A_FaceTarget(15,0);
		#### E 2 A_JumpIfTargetInLOS("missile2",40);
		#### A 0 A_FaceTarget(15,0);
		#### E 2 A_JumpIfTargetInLOS("missile2",40);
		#### ABCD 3 A_HDChase();
		---- A 0 setstatelabel("see");

	missile:
		#### A 0 A_JumpIfTargetInLOS(3,120);
		#### CD 2 A_FaceTarget(90);
		#### E 1 A_SetTics(random(4,10)); //when they just start to aim,not for followup shots!
		#### A 0 A_CheckLOF("see",
			CLOFF_JUMPNONHOSTILE|CLOFF_SKIPTARGET|
			CLOFF_JUMPOBJECT|CLOFF_MUSTBESOLID|CLOFF_SKIPENEMY,
			0,0,0,0,44,0
		);
	missile2:
		#### A 0{
			if(!target){
				setstatelabel("see");
				return;
			}
			double dist=distance3d(target);
			if(dist<300){
				turnamount=40;
			}else if(dist<800){
				turnamount=30;
			}else{
				turnamount=20;
			}
		}//fallthrough to turntoaim
	turntoaim:
		#### E 2 A_FaceTarget(turnamount,turnamount);
		#### A 0 A_JumpIfTargetInLOS(2);
		---- A 0 setstatelabel("see");
		#### A 0 A_JumpIfTargetInLOS(1,10);
		loop;
		#### A 0 A_FaceTarget(turnamount,turnamount);
		#### E 1 A_SetTics(random(1,100/clamp(1,turnamount,turnamount+1)+6));
		#### E 0{
			if(
				battery<1
			){
				setstatelabel("mustreload");
				return;
			}
			shotspread=frandom(0.07,0.27)*turnamount;
			setstatelabel("shoot");
		}
	shoot:
		---- A 0 A_JumpIf(unloaded==true,"MustReload");
		---- A 0 A_JumpIf(!hdmobai.tryshoot(self,32,256,1,1),"roam");
		TBJK E 10 A_FaceTarget(20,20,z_ofs:(alt?0:frandom(10,-60)));
	shootpb:
		TBJK E 10{if(HDTBJ_AltByDistance){alt=(target&&distance3d(target)<666);}else alt=random(0,1);}
		TBJK EEEEEE 3;
	shootpb2:
		TBJK A 0{
		if(alt)setstatelabel("shootpb2b");
		}
		TBJK EEEEEEE 2 bright{ A_ThunderZap(); A_StartSound("weapons/plasidle",CHAN_WEAPON);}
		TBJK FEEFEFEFEFEEE 2 bright light("PLAZMABX2");
		---- A 0 A_JumpIfTargetInLOS("shoot",3);
		---- A 0 setstatelabel("see");
		---- A 0 A_Jump(48,"missile");
		---- A 0 setstatelabel("see");

	uhohtbisfuckingempty:
		#### FEEFEFEFEFEEE 2 bright light("PLAZMABX2");
		---- A 0 setstatelabel("mustreload");

	shootpb2b:
		TBJK EEEEEEEEEEEEE 2{ A_ThunderZap(); A_StartSound("weapons/plasidle",CHAN_WEAPON);}
		TBJK FEEFEFEFEFEEE 2 bright light("PLAZMABX2");
		---- A 0 A_JumpIfTargetInLOS("shoot",3);
		---- A 0 setstatelabel("see");
		---- A 0 A_Jump(48,"missile");
		---- A 0 setstatelabel("see");
	mustreload:
	TBJK E 10;
	reload:
		#### A 0{
		if(HDTBJ_LimitedBatteries){
		if(wildbattery>0)setstatelabel("reload2");
			}
		}
		#### A 0{
		if(HDTBJ_LimitedBatteries){
		if(reservebattery<1)setstatelabel("see");
			}
		}
		#### A 2 A_HDChase("melee",null,CHF_FLEE);
		#### A 0 A_StartSound("weapons/plasopen",CHAN_WEAPON);
		#### BCD 2 A_HDWander(flags:CHF_FLEE);
		#### A 2{
			A_HDWander();
			if(unloaded==true)return;

			A_StartSound("weapons/pocket");
			A_SpawnProjectile("HDCellpackEmpty",38,0,random(90,120));
				unloaded=true;
		}
		#### BCD 2 A_HDWander(flags:CHF_FLEE);
		#### A 4 A_StartSound("weapons/pocket",9);
		#### BC 4 A_HDWander(flags:CHF_FLEE);
		#### E 6 A_StartSound("weapons/plasload");
		#### E 2{
			A_StartSound("weapons/plasclose");
			battery=20;
			if(HDTBJ_LimitedBatteries)reservebattery--;
			unloaded=false;
			hdmobai.wander(self,true);
		}
		#### CB 4 A_HDChase("melee",null);
		goto turntoaim;

	reload2:
		#### A 0{
		if(HDTBJ_LimitedBatteries){
		if(wildbattery<1)setstatelabel("reload");
			}
		}
		#### A 2 A_HDChase("melee",null,CHF_FLEE);
		#### A 0 A_StartSound("weapons/plasopen",CHAN_WEAPON);
		#### BCD 2 A_HDWander(flags:CHF_FLEE);
		#### A 2{
			A_HDWander();
			if(unloaded==true)return;

			A_StartSound("weapons/pocket");
			A_SpawnProjectile("HDCellpackEmpty",38,0,random(90,120));
				unloaded=true;
		}
		#### BCD 2 A_HDWander(flags:CHF_FLEE);
		#### A 4 A_StartSound("weapons/pocket",9);
		#### BC 4 A_HDWander(flags:CHF_FLEE);
		#### E 6 A_StartSound("weapons/plasload");
		#### E 2{
			A_StartSound("weapons/plasclose");
			battery=random(0,20);
			if(HDTBJ_LimitedBatteries)wildbattery--;
			unloaded=false;
			hdmobai.wander(self,true);
		}
		#### CB 4 A_HDChase("melee",null);
		goto turntoaim;

	pain:
		#### G 3 A_Jump(12,1);
		#### G 3{
			A_Pain();
			if(!random(0,7))A_AlertMonsters();
		}
		#### G 0{
			if(target&&distance3d(target)<100)setstatelabel("see");
			bfrightened=true;
		}
		#### ABCD 2{hdmobai.chase(self);}
		#### G 0{bfrightened=false;}
		---- A 0 setstatelabel("see");

	death:
		#### H 5;
		#### I 5 A_Vocalize(deathsound);
		#### JK 5;
	dead:
		#### K 3 canraise{if(abs(vel.z)<2.)frame++;}
		#### L 5 canraise{if(abs(vel.z)>=2.)setstatelabel("dead");}
		wait;
	xxxdeath:
		#### O 5;
		#### P 5 A_XScream();
		#### QRSTUV 5;
		goto xdead2;
	xdeath:
		#### O 5;
		#### P 5{
			spawn("MegaBloodSplatter",pos+(0,0,34),ALLOW_REPLACE);
			A_XScream();
		}
		#### QR 5 spawn("MegaBloodSplatter",pos+(0,0,34),ALLOW_REPLACE);
		#### STUV 5;
		goto xdead2;
	xdead2:
		#### V 3 canraise{if(abs(vel.z)<2.)frame++;}
		#### W 5 canraise{if(abs(vel.z)>=2.)setstatelabel("xdead2");}
		wait;
	raise:
		#### A 0{
			alt=false; //in case if AbD is disabled.
		}
		#### L 4 spawn("MegaBloodSplatter",pos+(0,0,34),ALLOW_REPLACE);
		#### LK 6;
		#### JIH 4;
		#### A 0 A_Jump(256,"see");
	ungib:
		#### U 12;
		#### T 8;
		#### SRQ 6;
		#### PON 4;
		#### A 0 A_Jump(256,"see");
	}
}

class DeadJackbuster:HDJackbuster{
	override void postbeginplay(){
		super.postbeginplay();
		A_Die("spawndead");
	}
	states{
	death.spawndead:
		PLAY A 0;
		goto dead;
	}
}
